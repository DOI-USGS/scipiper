% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scmake.R
\name{scdel}
\alias{scdel}
\title{Wrapper for remake::delete that permits cache sharing}
\usage{
scdel(target_names, verbose = TRUE, remake_file = "remake.yml")
}
\arguments{
\item{target_names}{vector of targets to delete}

\item{verbose}{as in \code{\link[remake:delete]{remake::delete()}}}

\item{remake_file}{as in \code{\link[remake:delete]{remake::delete()}}}
}
\description{
\code{\link[remake:delete]{remake::delete()}} claims that for files you can generally just delete the
file itself with no need to call remake::delete(). This may also be the case
for a shared cache; especially for non-status-indicator files (which have no
build status file) however, it seems cleaner to delete the build status files
at the same time that one deletes an indicator file.
}
\details{
The option to set \code{dependencies=TRUE} for \code{\link[remake:delete]{remake::delete()}} is omitted
because it sounds terrifying to me: as currently implemented in remake,
dependencies are the UPSTREAM targets on which the current target_names
depend - i.e., if B is built from A and you ask to delete B with
dependencies=TRUE, A will also be deleted. Scary, right? So let's not.
}
